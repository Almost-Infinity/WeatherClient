import React from 'react';
import { connect } from 'react-redux';
import { func, array, bool } from 'prop-types';

import { cn } from 'Utils';
import { fetchForecast } from 'Actions/weather.js';
import mapData from './map-data.js';
import styles from './styles.sass';

function Map({ toggleModal, fetchForecast, modalState, setActiveCity, cities }) {
  function onClick(evt) {
    if (evt.target instanceof SVGPathElement) {
      const cityId = evt.target.getAttribute('data-city-id');
        if (!cities[cityId] || !cities[cityId].isFetched) {
        fetchForecast(
          evt.target.getAttribute('data-coord'),
          cityId
        );
      }
      setActiveCity({ activeCity: +cityId });
      toggleModal();
    }
  }

  return (
    <div className={modalState ? cn(styles.mapWrapper, styles.blur) : styles.mapWrapper}>
      <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1762 1208' className={styles.country} onClick={onClick}>
        <path className={styles.ukraine} d='M713.38 166.38l-1.5-15.75-6.13-8.38-1.75-9.38-10.13 1-11.5 8.88-10.25 3-4 17L656 157v-12.13l-6-6.75-9.13-.13-8.75 7.13-11.63-15.5-12.24 7.38-13.25.38-9.75-6.5-2.63 11.88-7.38 6.38-7.25-2.38v-14.5l-12-5.75-11.5 5.25-12.49.74-12-30.25h-7l-5.25 4-12.25.75-5.5-4.75-17-6.5h-11l-10.5-7.25h-14.25l-7.25-10-31-4h-12.5L376 72h-12.25L353 65.25l-4.5 5.25-72-.5-14.75 13.75v7.75l-9.5 14.25-23.75 1-14.25-6.25-17.5 1.25v11l2.25 15.5-.75 20 17.5 28 14 35.5 6.25 8.5-12.25 3.75 1 9.25L233 246c-.27 2.66-.55 5.33-.82 7.99-.39 3.84-.79 7.67-1.18 11.51-5.42 6.75-10.83 13.5-16.25 20.25H200.5l-20.5 16-7.5 8.25-20.75 12.25L137 334.5l-10.25 17-13.5 13L101 374.75l-6.5 14-13.75 3.75 3.25 62 7.5 16.75L63.25 465l-5.5 10.5-1.75 9.75-12.75 10.5-4 11.25L35 524.25 21 535.5l-4.25 12-5 10.5 8.75 7.25L28 583.5l17.75 9.5 9 16.5 17.75 4 2 17.75H83l6.75 2.25 13.5-15.5 11.5 2.75 15.5 17.75h32.25l10.75 8.25h15.5l6.25 8 20.5 1.5 18.25-8 11 8 7 10.75L263 679l1.75 11 20.75 2 11.5-12 13.25-14.5h44l14.75-5.25 23.25-1L408 653l1.5-17.5 16.67-5.83 16.33-3.17 7.83 3.17 10.5-8.5 1.17-15.33 6-1.83 11.67 8.33 5-8.33h7.5l5.67 7.67h10.67l5.83-14.33 6 4.5 8.67-7.33 5.5 4.33 16.67.83L562.5 603l9.17 10.67 15.67 8.83 2 6.67 6.83 1.67 4.17 4.67 8.83-4.5 7.67 4-3.33 11.17 6.67.17 4.67 8.67 8.83-10.5 10.67.33 15.17 8.67c2.86 4.23 5.72 8.46 8.57 12.69 2.81 4.16 5.62 8.32 8.43 12.47 2.17.67 4.33 1.33 6.5 2l6-5.83 5.67 3.67 4 11.5-2.17 7.5.67 12.33-6 6.83-4 23.5 7.83 10.17 11.33 8.33 14 15.83 4.17-9.33 8.67 4.83-4.33 13.83-.33 9.5-5.17 5 9.83 9.17-1.17 15 7.33 11.67 9 2.83 16.92 8.25 5 48.75 14.25 11.5v6.25h-20.25l-8 4.25-10.75-15.75-8.75 11.5L727.5 901l-10.25-4.5-20.5 12.5-5.75-19.75-25 13 3 13.75.75 12.75 4.5 10.25-1.75 11.75-7 9.5-1.5 9-12.25 4-6 8-1.75 11-10.25 6.75-3.5 7.75-12.25 5.5 2.5 13-1 10.25-10.5 4.25h-17l-3 10.5 8.75 11.5 10.5 6.5L617 1078l26 5 3.5-16.5 8.75.25 4.25 9 21.5-9.25 22-10.5 16.5 2 12 10.25 2.75 20h7.25l3.25-10 7.75-7-1.5-11.75-12.75-10.25-7-21.75 2.5-21.25 6.5-2.25 4.75 22 9.5 3.25 3.75-7.5-4.25-11.25 10-2.5 2.25-11.25 12.5-5 7.25 3.5 13.75-4.25 15.5-27.25-2.25-15L792.75 928 787 912l6.75-8.25 7 3.25 7 8 2.75 9.5 7.75 4.5 1.25 8.25 4.75 3.75 4.25 3.25 8.75-4.75L839 928l10-9.25 3.5-29L872 887l15.08-9.17 17.25 1 9.42 2.83 13-12.92 7.17 7.75 8.42-2.92 21.92 2.67 5.25-15 9.5 12.25 8.5.5 5.5 9 11.75-3.75 13.5 6.25-1.75 8.25-14.75-.5L977 891.5l-16.75-4.75-26.25-.5 1.25 6.25 10.75 9.25 9.5-8.25 8.5 3.5 15.75 6.75-3 9.5-9 7-7.25-3-4.75 8.25 13.25-1 15.75 7.5 18.5 11.75 15 9.75L1040 955l17.25-8.75 21.25-1.75 6.5-2.5s8.5 2.75 9.25 2.75 9.75-11.5 9.75-11.5l4 8.25 21.75 14 8.5-15.25 4.5-.75 3 9.5 5 6.25-3.75 12.25 8.5 4.75-3.25 11-18.5 2.75-9.5 7.25-19.75 12.25-31.5 14.25-19.5 14.5-17.75 9-1 15 5.75 7.75 9.75-4.5 25.75-3.5 30.25 26.5 23.5-1.75 21.25 18.75v28l-5 8 .25 26-13.25 5.25 2 14 10.5 7.25 11.25 1.25 7 9.75 42.25-3.25 8-9.75 17.75-10 8-22.75 15.5-9.25 11.25-11.5 18.5-1.25 13.5-2 8.25 7.25 10.75-21 16.75-8.25 2.25-13.75 13.75-12.5 19.5 2.75 12.25 11.75 45.75-5.5 16-5.75 3.25-35 4.5-9 15.5-1.25v-10l-10.75-3.5-28.5-3.5-25 10.25-2 9.25h-11.25l-8.5-12.75-7.75 11.5-12.75 6-6.25 10.25-22.75.25-19.5-2.5-10.25-6.5-.5-18.5-10.63-16.88-5.88-11.75-20.38-4.25-.5-13.5s11.75-.13 12.13-.13 8.63-6.25 8.63-6.25l-3.63-8.75-8.5-5.75-.38-23.13-7.88-5.5 13.38-17.75 16.63-2.25 14.5-21L1319 904l17.17-20.33 23.17-18.5 19.83-14.5 13.33-1.83 16.67 5.83 10.67-4.83 13.33-17.5 17.17-5.67 13.17 4.67 13.17-16 13.67-3.67 11.33-12.33 8.5 2.5 15.5-11.17V781l11.33-7.17 9.67-.67 8.67-5.17 15.33.83 10.33-3.33 5.67 4.67h7.83l2.33-19.5 7.67-8.83v-10l-6.33-.33 2-38.33 9-9.67 15.67-.83 5.83-9.67 10.17.17 6-31.17 15.5-1 5.83-2.33 10 4 16.58-4.92 12.5 6 8-5.75 21.5-1.75 4.75-7.5-4.5-22 4.5-5.5 1.25-16.5 10.75-12L1750 566l-12.5.25 5.25-11.25-5.5-8.5-5.25-21-14.75 1 .5-27 7-5.75 13.5-1.75 4-5.25 11.25-.25-3-10.75-11 4.25-26.75-4.25L1708 466l14-12.5 8.25-1.75 15.75-19-1.25-31.25-11.75-6 2.75-13.5 7-11s-18-.75-18.75.25-9.75 9.5-9.75 9.5L1690 375.5l-2.5-15.5-15.25-1.5-11.5 3L1644 342l-6.5 9.5-20-1.25-22.75-14-27.75-.75 2-10.75-19.5 1.25-4 22.75-10 1-7-12.5-20.25-11.25-14.5-8-1-21.5-11.5.5-8-17.75-13 1.75-15.5 13.5-21.75 4-19 13.75-3 5.5-21-12.25-15.25 1.25-13.75-17-27 3.25-7 11.5-9.75 3.25-4.25-17-16.75-2.75-2.75-11.5-4.25-10.25 5.5-11.75-6.25-19-9.25-13.5 4.25-21.25-18 6-4.5-23-15.75-2.25-6.25 5.25h-21.75l-4.75-6-14-2.75-16.75 5v-21.75l-7.5-1 .5-7.75 4.5-4-.5-7.5-7.25-.75-5-16.5 7-9.5L1179 112V95l-16-9.25-13.5-17.25-2-21-17.75-17.25-5.5-11L1105.5 22l-9.75 8.75-1-9.25-15.5 2-8.5-4.25L1049 37.5l-27.5-1.75-9-7.25-17.75.5-4 27.5L978 69.75l-17.25.5-31-8.5-30 2.25-6.25 6.5-14.25-4.25L866 68.5l-1.25 9-5.75 6-10.25 8.75-10.5 19-8 11.25-3.5 19 7 10.25 5.5 21.5-8.25 11.5-13.75-2-12.75-25-30.75-.25-16.25 2-10-8.5-18 16-16.12-.62z'/>
        {
          mapData.map((city, idx) => {
            return (
              <g key={idx}>
                <path className={styles.city} d={city.path} data-coord={`${city.lat},${city.lon}`} data-city-id={idx}/>
                <text className={styles.cityName} x={city.nameX} y={city.nameY}>{city.name}</text>
              </g>
            );
          })
        }
      </svg>
    </div>
  );
}

Map.propTypes = {
  toggleModal: func.isRequired,
  fetchForecast: func.isRequired,
  modalState: bool.isRequired,
  setActiveCity: func.isRequired,
  cities: array.isRequired
};

const mapStateToProps = (state) => ({ cities: state.cities });

export default connect(
  mapStateToProps,
  { fetchForecast }
)(Map);